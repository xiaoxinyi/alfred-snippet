{
  "alfredsnippet" : {
    "snippet" : "##\n# Refspecs can be used with the git push command to give a different name to the remote branch. For example, the following command pushes the master branch to the origin remote repo like an ordinary git push, but it uses qa-master as the name for the branch in the origin repo\ngit push origin master:refs\/heads\/qa-master\n\n# A refspec is specified as [+]<src>:<dst>. The <src> parameter is the source branch in the local repository, and the <dst> parameter is the destination branch in the remote repository. The optional + sign is for forcing the remote repository to perform a non-fast-forward update.\n\n#  use refspecs for deleting remote branches\ngit push origin :some-feature\ngit push origin --delete some-feature\n\n##\n# By default, git fetch fetches all of the branches in the remote repository. The reason for this is the following section of the .git\/config file\n[remote \"origin\"]\n    url = https:\/\/git@github.com:mary\/example-repo.git\n    fetch = +refs\/heads\/*:refs\/remotes\/origin\/*\n\n# To fetch only the master branch, change the fetch line to match the following\n[remote \"origin\"]\n    url = https:\/\/git@github.com:mary\/example-repo.git\n    fetch = +refs\/heads\/master:refs\/remotes\/origin\/master\n\n# if you want to always push the master branch to qa-master in the origin remote \n[remote \"origin\"]\n    url = https:\/\/git@github.com:mary\/example-repo.git\n    fetch = +refs\/heads\/master:refs\/remotes\/origin\/master\n    push = refs\/heads\/master:refs\/heads\/qa-master\n\n##\n# grandparent of HEAD\ngit show HEAD~2\n\n##\n# the first parent is from the branch that you were on when you performed the merge, and the second parent is from the branch that you passed to the git merge command.\n\n# The ~ character will always follow the first parent of a merge commit. If you want to follow a different parent, you need to specify which one with the ^ character.\n\n# if HEAD is a merge commit, the following returns the second parent of HEAD\ngit show HEAD^2\n\n\n# Only list commits that are parent of the second parent of a merge commit\ngit log HEAD^2\n\n# Remove the last 3 commits from the current branch\ngit reset HEAD~3\n\n# Interactively rebase the last 3 commits on the current branch\ngit rebase -i HEAD~3\n",
    "uid" : "D5F55E54-8150-40F7-9A25-13569195718E",
    "name" : "git ref",
    "keyword" : "git ref"
  }
}